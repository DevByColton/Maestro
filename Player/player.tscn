[gd_scene load_steps=5 format=3 uid="uid://j0rfm17mq516"]

[ext_resource type="Texture2D" uid="uid://dennmein72kcc" path="res://assets/Player.png" id="1_ivdve"]

[sub_resource type="GDScript" id="GDScript_ox1vd"]
script/source = "extends CharacterBody2D

var jump_velocity: float = -550.0
var descend_gravity: float = 1700.0
var speed: float = 1000.0

var sprite_half_width: float = 26.5 # Can probably get width and height from sprite node item
var sprite_half_height: float = 25
@onready var screen_size := get_viewport_rect().size
@onready var screen_min_bounds := Vector2(sprite_half_width, sprite_half_height)
@onready var screen_max_bounds := Vector2(screen_size.x - sprite_half_width, screen_size.y - sprite_half_height)

func _physics_process(delta: float) -> void:
	
	# Horizontal movement
	if Input.is_action_pressed(\"move_right\"):
		velocity.x += speed * delta
	if Input.is_action_pressed(\"move_left\"):
		velocity.x -= speed * delta

	# Vertical movement
	if not is_on_floor():
		velocity.y += get_custom_gravity() * delta
	
	# Check jump
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = jump_velocity
	
	# Move the player and make sure it cannot go out of bounds
	move_and_slide()
	position = position.clamp(screen_min_bounds, screen_max_bounds)


func get_custom_gravity() -> float:
	# When decending apply heavier gravity
	if velocity.y > 0:
		return descend_gravity
	
	# When ascending return normal gravity
	return get_gravity().y
"

[sub_resource type="SpriteFrames" id="SpriteFrames_i031r"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_ivdve")
}],
"loop": true,
"name": &"Player",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_mb0ta"]
size = Vector2(50, 108)

[node name="Player" type="CharacterBody2D"]
z_index = 1000
collision_layer = 7
collision_mask = 7
slide_on_ceiling = false
script = SubResource("GDScript_ox1vd")

[node name="Sprite" type="AnimatedSprite2D" parent="."]
scale = Vector2(0.5, 0.5)
sprite_frames = SubResource("SpriteFrames_i031r")
animation = &"Player"

[node name="Collider" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_mb0ta")
debug_color = Color(3.41728e-06, 0.630656, 0.451101, 0.419608)
